{"version":3,"sources":["webpack://dcmjs/./adapters/Cornerstone/Segmentation.js"],"names":["Segmentation","stackOfImages","toolState","segArrayBuffer","console","log","dicomData","dcmjs","data","DicomMessage","readFile","dataset","DicomMetaDictionary","naturalizeDataset","dict","_meta","namifyDataset","meta","multiframe","normalizers","Normalizer","normalizeToDataset"],"mappings":";;;;;;;;;;;;;;;;;;;;IAAqBA,Y;AACnB,0BAAc;AAAA;AAAE;;;;sCAESC,a,EAAeC,S,EAAW,CAAE;;;kCAEhCD,a,EAAeE,c,EAAgB;AAClDC,cAAQC,GAAR,CAAYJ,aAAZ;AACAG,cAAQC,GAAR,CAAYF,cAAZ;;AAEAG,kBAAYC,MAAMC,IAAN,CAAWC,YAAX,CAAwBC,QAAxB,CAAiCP,cAAjC,CAAZ;AACA,UAAIQ,UAAUJ,MAAMC,IAAN,CAAWI,mBAAX,CAA+BC,iBAA/B,CACZP,UAAUQ,IADE,CAAd;AAGAH,cAAQI,KAAR,GAAgBR,MAAMC,IAAN,CAAWI,mBAAX,CAA+BI,aAA/B,CACdV,UAAUW,IADI,CAAhB;AAGAC,mBAAaX,MAAMY,WAAN,CAAkBC,UAAlB,CAA6BC,kBAA7B,CAAgD,CAACV,OAAD,CAAhD,CAAb;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AA6BD;;;;;;kBA/CkBX,Y","file":"dcmjs.fe363a940c6b554de194.hot-update.js","sourcesContent":["export default class Segmentation {\n  constructor() {}\n\n  static generateToolState(stackOfImages, toolState) {}\n\n  static readToolState(stackOfImages, segArrayBuffer) {\n    console.log(stackOfImages);\n    console.log(segArrayBuffer);\n\n    dicomData = dcmjs.data.DicomMessage.readFile(segArrayBuffer);\n    let dataset = dcmjs.data.DicomMetaDictionary.naturalizeDataset(\n      dicomData.dict\n    );\n    dataset._meta = dcmjs.data.DicomMetaDictionary.namifyDataset(\n      dicomData.meta\n    );\n    multiframe = dcmjs.normalizers.Normalizer.normalizeToDataset([dataset]);\n\n    /*\n    const { globalImageIdSpecificToolStateManager } = cornerstoneTools;\n\n    for (let i = 0; i < imageIds.length; i++) {\n      const imageId = imageIds[i];\n      const byteOffset = width * height * i;\n      const length = width * height;\n      const slicePixelData = new Uint8ClampedArray(buffer, byteOffset, length);\n\n      const toolData = [];\n      toolData[segmentationIndex] = {\n        pixelData: slicePixelData,\n        invalidated: true\n      };\n\n      const toolState =\n        globalImageIdSpecificToolStateManager.saveImageIdToolState(imageId) ||\n        {};\n\n      toolState[toolType] = {\n        data: toolData\n      };\n\n      globalImageIdSpecificToolStateManager.restoreImageIdToolState(\n        imageId,\n        toolState\n      );\n    }\n    */\n  }\n}\n"],"sourceRoot":""}