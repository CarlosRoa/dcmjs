{"version":3,"sources":["webpack://dcmjs/./adapters/Cornerstone/Segmentation.js"],"names":["Segmentation","dataset","cornerstoneTools","globalImageIdSpecificToolStateManager","i","imageIds","length","imageId","byteOffset","width","height","slicePixelData","Uint8ClampedArray","buffer","toolData","segmentationIndex","pixelData","invalidated","toolState","saveImageIdToolState","toolType","data","restoreImageIdToolState"],"mappings":";;;;;;;;;;;;;;;;;;;;IAAqBA,Y;AACnB,0BAAc;AAAA;AAAE;;;;sCAESC,O,EAAS;AAChC;AACA;;;;;;AAFgC,8BAQkBC,gBARlB;AAAA,UAQxBC,qCARwB,qBAQxBA,qCARwB;;;AAUhC,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIC,SAASC,MAA7B,EAAqCF,GAArC,EAA0C;AACxC,YAAMG,UAAUF,SAASD,CAAT,CAAhB;AACA,YAAMI,aAAaC,QAAQC,MAAR,GAAiBN,CAApC;AACA,YAAME,SAASG,QAAQC,MAAvB;AACA,YAAMC,iBAAiB,IAAIC,iBAAJ,CAAsBC,MAAtB,EAA8BL,UAA9B,EAA0CF,MAA1C,CAAvB;;AAEA,YAAMQ,WAAW,EAAjB;AACAA,iBAASC,iBAAT,IAA8B;AAC5BC,qBAAWL,cADiB;AAE5BM,uBAAa;AAFe,SAA9B;;AAKA,YAAMC,YACJf,sCAAsCgB,oBAAtC,CAA2DZ,OAA3D,KACA,EAFF;;AAIAW,kBAAUE,QAAV,IAAsB;AACpBC,gBAAMP;AADc,SAAtB;;AAIAX,8CAAsCmB,uBAAtC,CACEf,OADF,EAEEW,SAFF;AAID;AACF;;;;;;kBAtCkBlB,Y","file":"dcmjs.9131231090c7422dd2e6.hot-update.js","sourcesContent":["export default class Segmentation {\n  constructor() {}\n\n  static generateToolState(dataset) {\n    // TODO: Check if the dataset is a seg.\n    /*\n    if (dataset) {\n      throw new Error(\"This package is only meant to \");\n    }\n    */\n\n    const { globalImageIdSpecificToolStateManager } = cornerstoneTools;\n\n    for (let i = 0; i < imageIds.length; i++) {\n      const imageId = imageIds[i];\n      const byteOffset = width * height * i;\n      const length = width * height;\n      const slicePixelData = new Uint8ClampedArray(buffer, byteOffset, length);\n\n      const toolData = [];\n      toolData[segmentationIndex] = {\n        pixelData: slicePixelData,\n        invalidated: true\n      };\n\n      const toolState =\n        globalImageIdSpecificToolStateManager.saveImageIdToolState(imageId) ||\n        {};\n\n      toolState[toolType] = {\n        data: toolData\n      };\n\n      globalImageIdSpecificToolStateManager.restoreImageIdToolState(\n        imageId,\n        toolState\n      );\n    }\n  }\n}\n"],"sourceRoot":""}